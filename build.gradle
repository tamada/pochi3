buildscript {
    ext.versions = [
            'picocli': '4.6.3',
            'asm': '9.2',
            'jupiter': '5.8.2',
            'gson': '2.9.0',
            'vavr': '0.10.4',
            'groovy': '4.0.1'
    ]
}

plugins {
    id 'pochi.java-conventions'
    id 'jacoco'
    id 'jacoco-report-aggregation'
    id 'test-report-aggregation'
    id 'com.github.kt3k.coveralls' version '2.12.0'
    id 'com.google.cloud.tools.jib' version '3.2.1'
}

evaluationDependsOnChildren()

dependencies {
    implementation project(':clpond')
    implementation project(':birthmarks')
    implementation project(':pochi-core')
    implementation project(':pochi-cli')

    jacocoAggregation project(':clpond')
    jacocoAggregation project(':birthmarks')
    jacocoAggregation project(':pochi-core')
    jacocoAggregation project(':pochi-cli')
}

reporting {
    reports {
        testCodeCoverageReport(JacocoCoverageReport) {
            testType = TestSuiteType.UNIT_TEST
        }
    }
}

tasks.named('check') {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport),
        tasks.named('testAggregateTestReport', TestReport)
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
//    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
    jacocoReportPath = "${buildDir}/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml"
}

// https://discuss.gradle.org/t/how-to-aggregate-subproject-jars-distributions-in-a-root-project-with-base-plugin-only/9798
task copyFiles(type: Copy) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    subprojects {
        from configurations.compileClasspath
    }
    from subprojects.collect { it.tasks.withType(Jar) }
    into "$buildDir/libs"
    // eachFile { System.out.printf("copy: %s%n", it.file) }
}

build.finalizedBy copyFiles

jib {
    from {
        image = 'gcr.io/distroless/java17-debian11'
        platforms {
            platform {
                architecture = "arm64"
                os = "linux"
            }
            platform {
                architecture = "amd64"
                os = "linux"
            }
        }
    }
    to {
        image = 'ghcr.io/tamada/pochi3'
        tags = [ "${version}", "${version}_distroless", "latest" ]
    }

    extraDirectories {
        paths {
            path {
                from = file("build/libs")
                into = "/opt/pochi3/libs"
            }
        }
    }
    container {
        environment = [
            "HOME": '/app',
            "POCHI3_VERSION": "${version}".toString(),
            "POCHI3_HOME": '/opt/pochi3',
        ]
        labels = [
            "org.opencontainers.image.authors": "Haruaki Tamada <tamada@users.noreply.github.com>",
            "org.opencontainers.image.url": "https://github.com/tamada/pochi3",
            "org.opencontainers.image.documentation": "Detecting software theft, the birthmarking toolkit for the Java platform.",
            "org.opencontainers.image.version": "${version}",
        ]
        user = "nonroot"
        creationTime = "USE_CURRENT_TIMESTAMP"
        workingDirectory = "/app"
        entrypoint = [ "java", "-p", "/opt/pochi3/libs", "-m", "jp.cafebabe.pochi.cli/jp.cafebabe.pochi.cli.Main" ]
    }
}