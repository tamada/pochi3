name: update_version
on:
  push:
    branches:
      - release/v*

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - name: Git Tag Name
        id: vars
        run: |
          echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
          echo "::set-output name=tag::${GITHUB_REF##**/v}"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.vars.outputs.branch }}
          fetch-depth: 0

      - name: Initialize Git
        run: |
          git config --global user.name  "GitHub Actions"
          git config --global user.email "action@github.com"
          git worktree add site/public gh-pages

      - name: Update version
        run: |
          VDH=$(echo "${{ steps.vars.outputs.tag }}" | sed 's/-/--/g')
          sed -e 's/\${VERSION}/${{ steps.vars.outputs.tag }}/g' -e 's/\${VERSION_DH}/${VDH}/g' templates/README.md > README.md
          echo 'v${{ steps.vars.outputs.tag }}' > site/layouts/shortcodes/version.html
          for i in dockers/*/Dockerfile ; do sed 's/ARG VERSION = .*/ARG VERSION = "${{ steps.vars.outputs.tag  }}"/g' $i > a ; mv a $i ; done
          sed -e "s/version = '.*'/version = '${{ steps.vars.outputs.tag }}'/g" buildSrc/src/main/groovy/pochi.java-conventions.gradle > a
          mv a buildSrc/src/main/groovy/pochi.java-conventions.gradle
          sed -e 's/${VERSION}/${{ steps.vars.outputs.tag }}/g' templates/VersionProvider.java > pochi-cli/src/main/java/jp/cafebabe/pochi/cli/VersionProvider.java
          git commit -a -m "update version to ${{ steps.vars.outputs.tag }}, ready to publish v${{ steps.vars.outputs.tag }}" || true

      - name: Push branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.vars.outputs.branch }}

      - name: Is pull request exists?
        id: pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          result=$(gh pr list --search "in:title ${{ steps.vars.outputs.branch }}" | wc -l)
          echo "::set-output name=related_pr_count::${result}"

      - name: Create pull request
        if: ${{ steps.pr.outputs.related_pr_count == 0 }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh pr create --base main --head ${{ steps.vars.outputs.branch }} --title "${{ steps.vars.outputs.branch }}" --body ""
